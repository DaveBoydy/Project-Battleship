(()=>{"use strict";var t={23:(t,e,n)=>{n.r(e),n.d(e,{default:()=>m});var A=n(72),a=n.n(A),r=n(825),s=n.n(r),i=n(659),o=n.n(i),l=n(56),d=n.n(l),c=n(540),u=n.n(c),p=n(113),B=n.n(p),f=n(200),h={};h.styleTagTransform=B(),h.setAttributes=d(),h.insert=o().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=u(),a()(f.A,h);const m=f.A&&f.A.locals?f.A.locals:void 0},56:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},72:t=>{var e=[];function n(t){for(var n=-1,A=0;A<e.length;A++)if(e[A].identifier===t){n=A;break}return n}function A(t,A){for(var r={},s=[],i=0;i<t.length;i++){var o=t[i],l=A.base?o[0]+A.base:o[0],d=r[l]||0,c="".concat(l," ").concat(d);r[l]=d+1;var u=n(c),p={css:o[1],media:o[2],sourceMap:o[3],supports:o[4],layer:o[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var B=a(p,A);A.byIndex=i,e.splice(i,0,{identifier:c,updater:B,references:1})}s.push(c)}return s}function a(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,a){var r=A(t=t||[],a=a||{});return function(t){t=t||[];for(var s=0;s<r.length;s++){var i=n(r[s]);e[i].references--}for(var o=A(t,a),l=0;l<r.length;l++){var d=n(r[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}r=o}}},113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},160:function(t,e,n){var A=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.launchPlayerAttack=function(t){const[e,n]=t.dataset.cellComputerId.split(",").map(Number),A=a.default.battleship.getComputerBoard().getBoard(),r=a.default.battleship.getComputerBoard();"0"!==A[e][n]&&(t.textContent="X",t.classList.add("landed-hit"),r.receiveAttack([e,n]),!0===r.isFleetSunk()&&i("Player wins")),"0"===A[e][n]&&(t.textContent=A[e][n],t.classList.add("missed-target")),s()},e.launchEnemyAttack=s;const a=A(n(753)),r=A(n(768));function s(){const t=a.default.battleship.getPlayerBoard().getBoard(),e=!0===r.default.successiveHit?o(d):o(l),[n,A]=e,s=a.default.battleship.getPlayerBoard(),c=document.querySelector(`[data-cell-player-id="${e.toString()}"]`);/^[cbdsp]$/.test(t[n][A])&&(c.textContent=t[n][A],c.classList.add("hit-landed"),s.receiveAttack([n,A]),r.default.lastSuccessfulHit.push([n,A]),r.default.successiveHit=!0,!0===s.isFleetSunk()&&i("Computer wins")),"0"===t[n][A]&&(c.textContent=t[n][A],c.classList.add("missed-target"))}function i(t){const e=document.createElement("div");e.setAttribute("class","game-over-Container max-w-[900px]");const n=document.createElement("h2");n.setAttribute("class","game-over-text mb-4 text-4xl md:text-5xl"),n.textContent=t;const A=document.createElement("button");A.setAttribute("class","game-over-button animate-pulse text-2xl md:text-3xl"),A.setAttribute("id","battleship-restart"),A.textContent="Restart",e.appendChild(n),e.appendChild(A),document.querySelector("#battle-screen").appendChild(e)}function o(t){let[e,n]=t();if(r.default.enemyAttacks.has([e,n].toString())){for(;r.default.enemyAttacks.has([e,n].toString());)[e,n]=t();r.default.enemyAttacks.add([e,n].toString())}else r.default.enemyAttacks.add([e,n].toString());return[e,n]}function l(){const t=[Math.floor(10*Math.random()),Math.floor(10*Math.random())],[e,n]=t;return[e,n]}function d(){let[t,e]=r.default.lastSuccessfulHit[r.default.lastSuccessfulHit.length-1];return c([t-1,e])&&!r.default.enemyAttacks.has([t-1,e].toString())?[t-1,e]:c([t,e+1])&&!r.default.enemyAttacks.has([t,e+1].toString())?[t,e+1]:c([t+1,e])&&!r.default.enemyAttacks.has([t+1,e].toString())?[t+1,e]:c([t,e-1])&&!r.default.enemyAttacks.has([t,e-1].toString())?[t,e-1]:c([t-1,e+1])&&!r.default.enemyAttacks.has([t-1,e+1].toString())?[t-1,e+1]:c([t+1,e+1])&&!r.default.enemyAttacks.has([t+1,e+1].toString())?[t+1,e+1]:c([t+1,e-1])&&!r.default.enemyAttacks.has([t+1,e-1].toString())?[t+1,e-1]:c([t-1,e-1])&&!r.default.enemyAttacks.has([t-1,e-1].toString())?[t-1,e-1]:(r.default.successiveHit=!1,[t,e]=l())}function c([t,e]){return e>=0&&e<10&&t>=0&&t<10}},183:function(t,e,n){var A=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=A(n(753)),r=A(n(960)),s=A(n(517)),i=A(n(520));addEventListener("DOMContentLoaded",(()=>{r.default.addTitleScreen(),document.body.addEventListener("click",(t=>{const e=t.target;"battleship-start"===e.id&&(r.default.removeTitleScreen(),s.default.addSetupScreen()),"launch-fleet"===e.id&&!0===a.default.deployComplete&&(s.default.removeSetupScreen(),i.default.addBattleScreen(a.default.playerMap)),"battleship-restart"===e.id&&location.reload()}))}))},200:(t,e,n)=>{n.d(e,{A:()=>i});var A=n(354),a=n.n(A),r=n(314),s=n.n(r)()(a());s.push([t.id,".cell {\n  display: table-cell;\n  border-right: 1px solid #000000;\n  border-bottom: 1px solid #000000;\n  width: 32px;\n  height: 32px;\n}\n.cell:hover {\n  background-color: hsl(0, 0%, 0%);\n  color: white;\n}\n.row {\n  display: table-row;\n}\n.table {\n  display: table;\n  border-left: 1px solid #000000;\n  border-top: 1px solid #000000;\n  max-width: 320px;\n}\n\n.beacon {\n  background-color: rgb(74 222 128); /* bg-green-400 */\n}\n\n.beacon:hover {\n  background-color: hsl(142, 61%, 54%); /* bg-green-400 */\n}\n\n.launch-button {\n  width: 318px;\n  background-color: rgb(199, 0, 0);\n  color: white;\n  padding: 14px 28px;\n  font-size: 1.5rem;\n  cursor: not-allowed;\n  margin-left: 30px;\n}\n\n.launch-ready:active {\n  transform: scale(0.99);\n}\n\n.launch-ready {\n  color: white;\n  background-color: rgb(68, 206, 119);\n  cursor: pointer;\n}\n\n#setup-grid,\n#battle-grid {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n#battle-grid .table {\n  cursor: crosshair;\n}\n\n#x-alpha-axis {\n  flex: 0 0 100%;\n  display: flex;\n  justify-content: center;\n}\n\n.inner-axis {\n  margin-left: 12px;\n  min-width: 300px;\n  display: flex;\n}\n\n.inner-axis span {\n  flex: 0 0 32px;\n}\n\n#y-numeric-axis {\n  flex: 0 0 16px;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n#y-numeric-axis span {\n  flex: 0 0 100%;\n  margin-top: 3px;\n}\n\n.hit-landed {\n  background-color: rgb(255, 4, 4);\n  color: white;\n}\n\n.landed-hit {\n  color: red;\n}\n\n.hit-landed:hover,\n.landed-hit:hover {\n  background-color: rgb(255, 4, 4);\n  color: white;\n}\n\n.missed-target {\n  color: green;\n}\n","",{version:3,sources:["webpack://./src/styles/grid.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,+BAA+B;EAC/B,gCAAgC;EAChC,WAAW;EACX,YAAY;AACd;AACA;EACE,gCAAgC;EAChC,YAAY;AACd;AACA;EACE,kBAAkB;AACpB;AACA;EACE,cAAc;EACd,8BAA8B;EAC9B,6BAA6B;EAC7B,gBAAgB;AAClB;;AAEA;EACE,iCAAiC,EAAE,iBAAiB;AACtD;;AAEA;EACE,oCAAoC,EAAE,iBAAiB;AACzD;;AAEA;EACE,YAAY;EACZ,gCAAgC;EAChC,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;EACjB,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,mCAAmC;EACnC,eAAe;AACjB;;AAEA;;EAEE,aAAa;EACb,uBAAuB;EACvB,eAAe;EACf,SAAS;EACT,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,cAAc;EACd,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,gCAAgC;EAChC,YAAY;AACd;;AAEA;EACE,UAAU;AACZ;;AAEA;;EAEE,gCAAgC;EAChC,YAAY;AACd;;AAEA;EACE,YAAY;AACd",sourcesContent:[".cell {\n  display: table-cell;\n  border-right: 1px solid #000000;\n  border-bottom: 1px solid #000000;\n  width: 32px;\n  height: 32px;\n}\n.cell:hover {\n  background-color: hsl(0, 0%, 0%);\n  color: white;\n}\n.row {\n  display: table-row;\n}\n.table {\n  display: table;\n  border-left: 1px solid #000000;\n  border-top: 1px solid #000000;\n  max-width: 320px;\n}\n\n.beacon {\n  background-color: rgb(74 222 128); /* bg-green-400 */\n}\n\n.beacon:hover {\n  background-color: hsl(142, 61%, 54%); /* bg-green-400 */\n}\n\n.launch-button {\n  width: 318px;\n  background-color: rgb(199, 0, 0);\n  color: white;\n  padding: 14px 28px;\n  font-size: 1.5rem;\n  cursor: not-allowed;\n  margin-left: 30px;\n}\n\n.launch-ready:active {\n  transform: scale(0.99);\n}\n\n.launch-ready {\n  color: white;\n  background-color: rgb(68, 206, 119);\n  cursor: pointer;\n}\n\n#setup-grid,\n#battle-grid {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n\n#battle-grid .table {\n  cursor: crosshair;\n}\n\n#x-alpha-axis {\n  flex: 0 0 100%;\n  display: flex;\n  justify-content: center;\n}\n\n.inner-axis {\n  margin-left: 12px;\n  min-width: 300px;\n  display: flex;\n}\n\n.inner-axis span {\n  flex: 0 0 32px;\n}\n\n#y-numeric-axis {\n  flex: 0 0 16px;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n#y-numeric-axis span {\n  flex: 0 0 100%;\n  margin-top: 3px;\n}\n\n.hit-landed {\n  background-color: rgb(255, 4, 4);\n  color: white;\n}\n\n.landed-hit {\n  color: red;\n}\n\n.hit-landed:hover,\n.landed-hit:hover {\n  background-color: rgb(255, 4, 4);\n  color: white;\n}\n\n.missed-target {\n  color: green;\n}\n"],sourceRoot:""}]);const i=s},285:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default={validMarks:[],markStart:!0,startCell:[],playerDeployType:"c",enemyDeployType:"c"}},286:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=t=>{const e=document.createElement("div");e.setAttribute("class","table");for(let n=0;n<10;n++){const A=document.createElement("div");A.setAttribute("class","row");for(let e=0;e<10;e++){const a=document.createElement("div");a.setAttribute("class","cell"),a.setAttribute(`data-cell-${t}-id`,`${n},${e}`),A.appendChild(a)}e.appendChild(A)}return e}},314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",A=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),A&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),A&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,A,a,r){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(A)for(var i=0;i<this.length;i++){var o=this[i][0];null!=o&&(s[o]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);A&&s[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},338:function(t,e,n){var A=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=A(n(987)),r=function(){const t=(0,a.default)(),e=(0,a.default)();return{getHumanBoard:()=>t,getComputerBoard:()=>e}}();e.default=r},354:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},366:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=t=>{const e=document.createDocumentFragment(),n=document.createElement("div");for(n.innerHTML=t;n.childNodes[0];)e.appendChild(n.childNodes[0]);return e}},469:function(t,e,n){var A=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.markDeployStart=function(t){if(t.classList.contains("cell")&&""===t.textContent&&!0===a.default.markStart){t.textContent=a.default.playerDeployType,a.default.markStart=!1,a.default.startCell=t.dataset.cellPlayerId.split(",").map(Number),a.default.validMarks=function(t,e){const n=s(t);return r.default.battleship.getPlayerBoard().markShipStart(n,e),r.default.battleship.getPlayerBoard().getValidMarks()}(t.textContent,a.default.startCell);for(const t of a.default.validMarks)document.querySelector(`[data-cell-player-id="${t.toString()}"]`).classList.add("beacon","animate-pulse")}},e.markDeployEnd=function(t){if(t.classList.contains("beacon")&&!1===a.default.markStart){t.textContent=a.default.playerDeployType;const e=s(t.textContent);r.default.battleship.getPlayerBoard().markShipEnd(e,a.default.startCell,t.dataset.cellPlayerId.split(",").map(Number));for(const t of e.getMiddleMarks())document.querySelector(`[data-cell-player-id="${t.toString()}"]`).textContent=a.default.playerDeployType;for(const t of a.default.validMarks)document.querySelector(`[data-cell-player-id="${t.toString()}"]`).classList.remove("beacon","animate-pulse");!function(){const t=document.querySelector("#deploy-ship-type"),e=document.querySelector("#launch-fleet"),n=document.querySelector("#setup-grid");switch(a.default.playerDeployType){case"c":a.default.playerDeployType="b",t.textContent="Deploy the Battleship",a.default.markStart=!0;break;case"b":a.default.playerDeployType="d",t.textContent="Deploy the Destroyer",a.default.markStart=!0;break;case"d":a.default.playerDeployType="s",t.textContent="Deploy the Submarine",a.default.markStart=!0;break;case"s":a.default.playerDeployType="p",t.textContent="Deploy the Patrol Boat",a.default.markStart=!0;break;default:t.textContent="Engage the enemy",r.default.deployComplete=!0,null!=n&&(r.default.playerMap=n),e.classList.add("launch-ready")}}()}},e.setupEnemyBoard=function(){const t=["c","b","d","s","p"];for(const e of t){const[t,n]=i(),A=l(e);r.default.battleship.getComputerBoard().markShipStart(A,[t,n]);const a=r.default.battleship.getComputerBoard().getValidMarks(),s=Math.floor(Math.random()*a.length),[o,d]=a[s];r.default.battleship.getComputerBoard().markShipEnd(A,[t,n],[o,d])}};const a=A(n(285)),r=A(n(753));function s(t){switch(t){case"c":return r.default.battleship.getPlayerCarrier();case"b":return r.default.battleship.getPlayerBattleShip();case"d":return r.default.battleship.getPlayerDestroyer();case"s":return r.default.battleship.getPlayerSubmarine();case"p":return r.default.battleship.getPlayerPatrol()}}function i(){let[t,e]=o();const n=r.default.battleship.getComputerBoard().getBoard();let A=!0;if("0"!==n[t][e])for(A=!1;!1===A;)[t,e]=o(),"0"===n[t][e]&&(A=!0);return[t,e]}function o(){return[Math.floor(10*Math.random()),Math.floor(10*Math.random())]}function l(t){switch(t){case"c":return r.default.battleship.getEnemyCarrier();case"b":return r.default.battleship.getEnemyBattleShip();case"d":return r.default.battleship.getEnemyDestroyer();case"s":return r.default.battleship.getEnemySubmarine();case"p":return r.default.battleship.getEnemyPatrol()}}},485:(t,e,n)=>{n.r(e),n.d(e,{default:()=>A});const A='<div id="battle-screen" class="grow min-h-screen text-center bg-white p-4 md:p-8 max-w-[900px]"> <h2 id="battle-narration" class="text-2xl mb-8 md:text-3xl"> Fire the Cannons </h2> <h2 class="text-2xl mb-8 md:text-3xl text-red-600">Enemy Waters</h2> <div id="battle-grid"> <div id="x-alpha-axis"> <div class="inner-axis"> <span>A</span> <span>B</span> <span>C</span> <span>D</span> <span>E</span> <span>F</span> <span>G</span> <span>H</span> <span>I</span> <span>J</span> </div> </div> <div id="y-numeric-axis"> <span>0</span> <span>1</span> <span>2</span> <span>3</span> <span>4</span> <span>5</span> <span>6</span> <span>7</span> <span>8</span> <span>9</span> </div> </div> <h2 class="text-2xl mb-8 md:text-3xl text-green-600">Friendly Waters</h2> </div> '},517:function(t,e,n){var A=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=A(n(946)),r=A(n(366)),s=A(n(286)),i=A(n(532)),o=n(469),l=document.querySelector("#battleship-container"),d=(0,r.default)(a.default),c=(0,s.default)("player"),u={addSetupScreen:()=>{l.appendChild(d),document.querySelector("#setup-grid").appendChild(c),i.default.init(),(0,o.setupEnemyBoard)()},removeSetupScreen:()=>{const t=document.querySelector("#setup-screen");null!=t&&(l.removeChild(t),i.default.destroy())}};e.default=u},520:function(t,e,n){var A=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=A(n(485)),r=A(n(366)),s=A(n(286)),i=A(n(683)),o=document.querySelector("#battleship-container"),l=(0,r.default)(a.default),d=(0,s.default)("computer"),c={addBattleScreen:t=>{o.appendChild(l);const e=document.querySelector("#battle-grid"),n=document.querySelector("#battle-screen");e.appendChild(d),n.appendChild(t),i.default.init()}};e.default=c},521:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=t=>{const e=t,n=function(t){switch(t){case"c":return 5;case"b":return 4;case"d":case"s":return 3;case"p":return 2;default:return 0}}(e),A=[];let a=0;return{getType:()=>e,getLength:()=>n,getDamage:()=>a,getMiddleMarks:()=>A,setMiddleMarks:t=>{A.push(t)},hit:()=>{a+=1},isSunk:()=>a>=n}}},532:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0});const A=n(469),a={init(){document.body.addEventListener("click",this.handleClick.bind(this))},handleClick(t){const e=t.target;(0,A.markDeployStart)(e),(0,A.markDeployEnd)(e)},destroy(){document.body.removeEventListener("click",this.handleClick)}};e.default=a},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},572:(t,e,n)=>{n.d(e,{A:()=>i});var A=n(354),a=n.n(A),r=n(314),s=n.n(r)()(a());s.push([t.id,".game-over-Container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 999;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: 20%;\n  display: flex;\n  flex-direction: column;\n  background-color: black;\n  color: white;\n  align-items: center;\n  justify-content: center;\n}\n","",{version:3,sources:["webpack://./src/styles/gameover.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,YAAY;EACZ,gCAAgC;EAChC,WAAW;EACX,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,YAAY;EACZ,mBAAmB;EACnB,uBAAuB;AACzB",sourcesContent:[".game-over-Container {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 999;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: 20%;\n  display: flex;\n  flex-direction: column;\n  background-color: black;\n  color: white;\n  align-items: center;\n  justify-content: center;\n}\n"],sourceRoot:""}]);const i=s},609:(t,e,n)=>{n.d(e,{A:()=>i});var A=n(354),a=n.n(A),r=n(314),s=n.n(r)()(a());s.push([t.id,'/*! tailwindcss v4.0.13 | MIT License | https://tailwindcss.com */\n@layer theme, base, components, utilities;\n@layer theme {\n  :root, :host {\n    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",\n      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",\n      "Courier New", monospace;\n    --color-red-600: oklch(0.577 0.245 27.325);\n    --color-green-600: oklch(0.627 0.194 149.214);\n    --color-blue-950: oklch(0.282 0.091 267.935);\n    --color-black: #000;\n    --color-white: #fff;\n    --spacing: 0.25rem;\n    --text-2xl: 1.5rem;\n    --text-2xl--line-height: calc(2 / 1.5);\n    --text-3xl: 1.875rem;\n    --text-3xl--line-height: calc(2.25 / 1.875);\n    --text-4xl: 2.25rem;\n    --text-4xl--line-height: calc(2.5 / 2.25);\n    --text-5xl: 3rem;\n    --text-5xl--line-height: 1;\n    --text-6xl: 3.75rem;\n    --text-6xl--line-height: 1;\n    --text-7xl: 4.5rem;\n    --text-7xl--line-height: 1;\n    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n    --default-font-family: var(--font-sans);\n    --default-font-feature-settings: var(--font-sans--font-feature-settings);\n    --default-font-variation-settings: var(\n      --font-sans--font-variation-settings\n    );\n    --default-mono-font-family: var(--font-mono);\n    --default-mono-font-feature-settings: var(\n      --font-mono--font-feature-settings\n    );\n    --default-mono-font-variation-settings: var(\n      --font-mono--font-variation-settings\n    );\n  }\n}\n@layer base {\n  *, ::after, ::before, ::backdrop, ::file-selector-button {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border: 0 solid;\n  }\n  html, :host {\n    line-height: 1.5;\n    -webkit-text-size-adjust: 100%;\n    -moz-tab-size: 4;\n      -o-tab-size: 4;\n         tab-size: 4;\n    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );\n    font-feature-settings: var(--default-font-feature-settings, normal);\n    font-variation-settings: var( --default-font-variation-settings, normal );\n    -webkit-tap-highlight-color: transparent;\n  }\n  body {\n    line-height: inherit;\n  }\n  hr {\n    height: 0;\n    color: inherit;\n    border-top-width: 1px;\n  }\n  abbr:where([title]) {\n    -webkit-text-decoration: underline dotted;\n    text-decoration: underline dotted;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    font-size: inherit;\n    font-weight: inherit;\n  }\n  a {\n    color: inherit;\n    -webkit-text-decoration: inherit;\n    text-decoration: inherit;\n  }\n  b, strong {\n    font-weight: bolder;\n  }\n  code, kbd, samp, pre {\n    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );\n    font-feature-settings: var( --default-mono-font-feature-settings, normal );\n    font-variation-settings: var( --default-mono-font-variation-settings, normal );\n    font-size: 1em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub, sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  table {\n    text-indent: 0;\n    border-color: inherit;\n    border-collapse: collapse;\n  }\n  :-moz-focusring {\n    outline: auto;\n  }\n  progress {\n    vertical-align: baseline;\n  }\n  summary {\n    display: list-item;\n  }\n  ol, ul, menu {\n    list-style: none;\n  }\n  img, svg, video, canvas, audio, iframe, embed, object {\n    display: block;\n    vertical-align: middle;\n  }\n  img, video {\n    max-width: 100%;\n    height: auto;\n  }\n  button, input, select, optgroup, textarea, ::file-selector-button {\n    font: inherit;\n    font-feature-settings: inherit;\n    font-variation-settings: inherit;\n    letter-spacing: inherit;\n    color: inherit;\n    border-radius: 0;\n    background-color: transparent;\n    opacity: 1;\n  }\n  :where(select:is([multiple], [size])) optgroup {\n    font-weight: bolder;\n  }\n  :where(select:is([multiple], [size])) optgroup option {\n    padding-inline-start: 20px;\n  }\n  ::file-selector-button {\n    margin-inline-end: 4px;\n  }\n  ::-moz-placeholder {\n    opacity: 1;\n    color: color-mix(in oklab, currentColor 50%, transparent);\n  }\n  ::placeholder {\n    opacity: 1;\n    color: color-mix(in oklab, currentColor 50%, transparent);\n  }\n  textarea {\n    resize: vertical;\n  }\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  ::-webkit-date-and-time-value {\n    min-height: 1lh;\n    text-align: inherit;\n  }\n  ::-webkit-datetime-edit {\n    display: inline-flex;\n  }\n  ::-webkit-datetime-edit-fields-wrapper {\n    padding: 0;\n  }\n  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {\n    padding-block: 0;\n  }\n  :-moz-ui-invalid {\n    box-shadow: none;\n  }\n  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {\n    -webkit-appearance: button;\n       -moz-appearance: button;\n            appearance: button;\n  }\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n    height: auto;\n  }\n  [hidden]:where(:not([hidden="until-found"])) {\n    display: none !important;\n  }\n}\n@layer utilities {\n  .relative {\n    position: relative;\n  }\n  .container {\n    width: 100%;\n    @media (width >= 40rem) {\n      max-width: 40rem;\n    }\n    @media (width >= 48rem) {\n      max-width: 48rem;\n    }\n    @media (width >= 64rem) {\n      max-width: 64rem;\n    }\n    @media (width >= 80rem) {\n      max-width: 80rem;\n    }\n    @media (width >= 96rem) {\n      max-width: 96rem;\n    }\n  }\n  .mb-4 {\n    margin-bottom: calc(var(--spacing) * 4);\n  }\n  .mb-8 {\n    margin-bottom: calc(var(--spacing) * 8);\n  }\n  .flex {\n    display: flex;\n  }\n  .grid {\n    display: grid;\n  }\n  .table {\n    display: table;\n  }\n  .min-h-screen {\n    min-height: 100vh;\n  }\n  .max-w-\\[900px\\] {\n    max-width: 900px;\n  }\n  .grow {\n    flex-grow: 1;\n  }\n  .transform {\n    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);\n  }\n  .animate-pulse {\n    animation: var(--animate-pulse);\n  }\n  .flex-col {\n    flex-direction: column;\n  }\n  .items-center {\n    align-items: center;\n  }\n  .justify-center {\n    justify-content: center;\n  }\n  .bg-black {\n    background-color: var(--color-black);\n  }\n  .bg-blue-950 {\n    background-color: var(--color-blue-950);\n  }\n  .bg-white {\n    background-color: var(--color-white);\n  }\n  .p-4 {\n    padding: calc(var(--spacing) * 4);\n  }\n  .text-center {\n    text-align: center;\n  }\n  .text-2xl {\n    font-size: var(--text-2xl);\n    line-height: var(--tw-leading, var(--text-2xl--line-height));\n  }\n  .text-4xl {\n    font-size: var(--text-4xl);\n    line-height: var(--tw-leading, var(--text-4xl--line-height));\n  }\n  .text-5xl {\n    font-size: var(--text-5xl);\n    line-height: var(--tw-leading, var(--text-5xl--line-height));\n  }\n  .text-green-600 {\n    color: var(--color-green-600);\n  }\n  .text-red-600 {\n    color: var(--color-red-600);\n  }\n  .text-white {\n    color: var(--color-white);\n  }\n  .md\\:flex {\n    @media (width >= 48rem) {\n      display: flex;\n    }\n  }\n  .md\\:p-8 {\n    @media (width >= 48rem) {\n      padding: calc(var(--spacing) * 8);\n    }\n  }\n  .md\\:text-2xl {\n    @media (width >= 48rem) {\n      font-size: var(--text-2xl);\n      line-height: var(--tw-leading, var(--text-2xl--line-height));\n    }\n  }\n  .md\\:text-3xl {\n    @media (width >= 48rem) {\n      font-size: var(--text-3xl);\n      line-height: var(--tw-leading, var(--text-3xl--line-height));\n    }\n  }\n  .md\\:text-5xl {\n    @media (width >= 48rem) {\n      font-size: var(--text-5xl);\n      line-height: var(--tw-leading, var(--text-5xl--line-height));\n    }\n  }\n  .md\\:text-6xl {\n    @media (width >= 48rem) {\n      font-size: var(--text-6xl);\n      line-height: var(--tw-leading, var(--text-6xl--line-height));\n    }\n  }\n  .md\\:text-7xl {\n    @media (width >= 48rem) {\n      font-size: var(--text-7xl);\n      line-height: var(--tw-leading, var(--text-7xl--line-height));\n    }\n  }\n}\n@property --tw-rotate-x {\n  syntax: "*";\n  inherits: false;\n  initial-value: rotateX(0);\n}\n@property --tw-rotate-y {\n  syntax: "*";\n  inherits: false;\n  initial-value: rotateY(0);\n}\n@property --tw-rotate-z {\n  syntax: "*";\n  inherits: false;\n  initial-value: rotateZ(0);\n}\n@property --tw-skew-x {\n  syntax: "*";\n  inherits: false;\n  initial-value: skewX(0);\n}\n@property --tw-skew-y {\n  syntax: "*";\n  inherits: false;\n  initial-value: skewY(0);\n}\n@keyframes pulse {\n  50% {\n    opacity: 0.5;\n  }\n}',"",{version:3,sources:["webpack://./src/input.css"],names:[],mappings:"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",sourcesContent:["@import 'tailwindcss';"],sourceRoot:""}]);const i=s},611:(t,e,n)=>{n.r(e),n.d(e,{default:()=>A});const A='<div id="start-screen" class="grow flex flex-col min-h-screen text-center bg-black p-4 md:p-8 max-w-[900px]"> <header> <h1 class="text-white text-5xl mb-8 md:text-7xl">BATTLESHIP</h1> <h2 class="text-white md:text-2xl">Non Standard Version</h2> </header> <main class="flex grow justify-center items-center"> <button id="battleship-start" class="text-white text-4xl md:text-6xl animate-pulse battleship-start"> Start </button> </main> <footer> <p class="text-white md:text-2xl"> By <a href="https://github.com/DaveBoydy">David Boyd</a> </p> </footer> </div> '},659:t=>{var e={};t.exports=function(t,n){var A=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(n)}},683:(t,e,n)=>{Object.defineProperty(e,"__esModule",{value:!0});const A=n(160),a={init(){document.body.addEventListener("click",this.handleClick.bind(this))},handleClick(t){const e=t.target;""===e.textContent&&e.classList.contains("cell")&&"cellComputerId"in e.dataset&&(0,A.launchPlayerAttack)(e)},destroy(){document.body.removeEventListener("click",this.handleClick)}};e.default=a},753:function(t,e,n){var A=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a={battleship:A(n(778)).default,deployComplete:!1,playerMap:document.createElement("div")};e.default=a},768:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});const n={enemyAttacks:new Set,lastSuccessfulHit:[],successiveHit:!1};e.default=n},778:function(t,e,n){var A=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=A(n(521)),r=A(n(338)),s=function(){const t=(0,a.default)("c"),e=(0,a.default)("b"),n=(0,a.default)("d"),A=(0,a.default)("s"),s=(0,a.default)("p"),i=(0,a.default)("c"),o=(0,a.default)("b"),l=(0,a.default)("d"),d=(0,a.default)("s"),c=(0,a.default)("p");return{getPlayerCarrier:()=>t,getPlayerBattleShip:()=>e,getPlayerDestroyer:()=>n,getPlayerSubmarine:()=>A,getPlayerPatrol:()=>s,getEnemyCarrier:()=>i,getEnemyBattleShip:()=>o,getEnemyDestroyer:()=>l,getEnemySubmarine:()=>d,getEnemyPatrol:()=>c,getPlayerBoard:()=>r.default.getHumanBoard(),getComputerBoard:()=>r.default.getComputerBoard()}}();e.default=s},823:(t,e,n)=>{n.r(e),n.d(e,{default:()=>m});var A=n(72),a=n.n(A),r=n(825),s=n.n(r),i=n(659),o=n.n(i),l=n(56),d=n.n(l),c=n(540),u=n.n(c),p=n(113),B=n.n(p),f=n(572),h={};h.styleTagTransform=B(),h.setAttributes=d(),h.insert=o().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=u(),a()(f.A,h);const m=f.A&&f.A.locals?f.A.locals:void 0},825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var A="";n.supports&&(A+="@supports (".concat(n.supports,") {")),n.media&&(A+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(A+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),A+=n.css,a&&(A+="}"),n.media&&(A+="}"),n.supports&&(A+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(A+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(A,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},834:(t,e,n)=>{n.r(e),n.d(e,{default:()=>m});var A=n(72),a=n.n(A),r=n(825),s=n.n(r),i=n(659),o=n.n(i),l=n(56),d=n.n(l),c=n(540),u=n.n(c),p=n(113),B=n.n(p),f=n(609),h={};h.styleTagTransform=B(),h.setAttributes=d(),h.insert=o().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=u(),a()(f.A,h);const m=f.A&&f.A.locals?f.A.locals:void 0},946:(t,e,n)=>{n.r(e),n.d(e,{default:()=>A});const A='<div id="setup-screen" class="grow min-h-screen text-center bg-white p-4 md:p-8 max-w-[900px]"> <h2 id="deploy-ship-type" class="text-2xl mb-8 md:text-3xl"> Deploy the Carrier </h2> <div id="setup-grid"> <div id="x-alpha-axis"> <div class="inner-axis"> <span>A</span> <span>B</span> <span>C</span> <span>D</span> <span>E</span> <span>F</span> <span>G</span> <span>H</span> <span>I</span> <span>J</span> </div> </div> <div id="y-numeric-axis"> <span>0</span> <span>1</span> <span>2</span> <span>3</span> <span>4</span> <span>5</span> <span>6</span> <span>7</span> <span>8</span> <span>9</span> </div> </div> <button id="launch-fleet" type="button" class="launch-button">Launch</button> </div> '},960:function(t,e,n){var A=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=A(n(611)),r=A(n(366)),s=document.querySelector("#battleship-container"),i=(0,r.default)(a.default),o={addTitleScreen:()=>{s.appendChild(i)},removeTitleScreen:()=>{const t=document.querySelector("#start-screen");null!=t&&s.removeChild(t)}};e.default=o},987:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=()=>{const t=Array.from({length:10},(()=>new Array(10).fill("0"))),e={};let n=[];return{getBoard:()=>t,getValidMarks:()=>n,markShipStart:(A,[a,r])=>{e[A.getType()]=A,t[a][r]=A.getType(),n=[],function(e,[A,a]){const r=/^[cbdsp]$/;let s=!1;if(A-(e.getLength()-1)>=0){for(let n=0;n<e.getLength()-1;++n)"0"!==t[A-(n+1)][a]&&(s=!0);s||n.push([A-(e.getLength()-1),a]),s=!1}if(a+(e.getLength()-1)<=9){for(let n=0;n<e.getLength()-1;++n)"0"!==t[A][a+(n+1)]&&(s=!0);s||n.push([A,a+(e.getLength()-1)]),s=!1}if(A+(e.getLength()-1)<=9){for(let n=0;n<e.getLength()-1;++n)"0"!==t[A+(n+1)][a]&&(s=!0);s||n.push([A+(e.getLength()-1),a]),s=!1}if(a-(e.getLength()-1)>=0){for(let n=0;n<e.getLength()-1;++n)"0"!==t[A][a-(n+1)]&&(s=!0);s||n.push([A,a-(e.getLength()-1)]),s=!1}if(A-(e.getLength()-1)>=0&&a+(e.getLength()-1)<=9){for(let n=0;n<e.getLength()-1;++n)(r.test(t[A-(n+1)][a+(n+1)])||r.test(t[A-(n+1)][a+n])&&r.test(t[A+1-(n+1)][a+(n+1)]))&&(s=!0);s||n.push([A-(e.getLength()-1),a+(e.getLength()-1)]),s=!1}if(A+(e.getLength()-1)<=9&&a+(e.getLength()-1)<=9){for(let n=0;n<e.getLength()-1;++n)(r.test(t[A+(n+1)][a+(n+1)])||r.test(t[A-1+(n+1)][a+(n+1)])&&r.test(t[A+(n+1)][a-1+(n+1)]))&&(s=!0);s||n.push([A+(e.getLength()-1),a+(e.getLength()-1)]),s=!1}if(A+(e.getLength()-1)<=9&&a-(e.getLength()-1)>=0){for(let n=0;n<e.getLength()-1;++n)(r.test(t[A+(n+1)][a-(n+1)])||r.test(t[A-1+(n+1)][a-(n+1)])&&r.test(t[A+(n+1)][a+1-(n+1)]))&&(s=!0);s||n.push([A+(e.getLength()-1),a-(e.getLength()-1)]),s=!1}if(A-(e.getLength()-1)>=0&&a-(e.getLength()-1)>=0){for(let n=0;n<e.getLength()-1;++n)(r.test(t[A-(n+1)][a-(n+1)])||r.test(t[A+1-(n+1)][a-(n+1)])&&r.test(t[A-(n+1)][a+1-(n+1)]))&&(s=!0);s||n.push([A-(e.getLength()-1),a-(e.getLength()-1)]),s=!1}}(A,[a,r])},markShipEnd:(e,n,A)=>{const[a,r]=A;!function(e,n,A){const[a,r]=n,[s,i]=A;if(s<a&&i===r)for(let n=0;n<e.getLength()-2;++n)t[a-(1+n)][r]=e.getType(),e.setMiddleMarks([a-(1+n),r]);if(s===a&&i>r)for(let n=0;n<e.getLength()-2;++n)t[a][r+(1+n)]=e.getType(),e.setMiddleMarks([a,r+(1+n)]);if(s>a&&i===r)for(let n=0;n<e.getLength()-2;++n)t[a+(1+n)][r]=e.getType(),e.setMiddleMarks([a+(1+n),r]);if(s===a&&i<r)for(let n=0;n<e.getLength()-2;++n)t[a][r-(1+n)]=e.getType(),e.setMiddleMarks([a,r-(1+n)]);if(s<a&&i>r)for(let n=0;n<e.getLength()-2;++n)t[a-(1+n)][r+(1+n)]=e.getType(),e.setMiddleMarks([a-(1+n),r+(1+n)]);if(s>a&&i>r)for(let n=0;n<e.getLength()-2;++n)t[a+(1+n)][r+(1+n)]=e.getType(),e.setMiddleMarks([a+(1+n),r+(1+n)]);if(s>a&&i<r)for(let n=0;n<e.getLength()-2;++n)t[a+(1+n)][r-(1+n)]=e.getType(),e.setMiddleMarks([a+(1+n),r-(1+n)]);if(s<a&&i<r)for(let n=0;n<e.getLength()-2;++n)t[a-(1+n)][r-(1+n)]=e.getType(),e.setMiddleMarks([a-(1+n),r-(1+n)])}(e,n,A),t[a][r]=e.getType()},receiveAttack:([n,A])=>{switch(t[n][A]){case"c":t[n][A]="x",e.c.hit();break;case"b":t[n][A]="x",e.b.hit();break;case"d":t[n][A]="x",e.d.hit();break;case"s":t[n][A]="x",e.s.hit();break;case"p":t[n][A]="x",e.p.hit();break;case"0":t[n][A]="o"}},isFleetSunk:function(){return!!(5===Object.keys(e).length&&e.c.isSunk()&&e.b.isSunk()&&e.d.isSunk()&&e.s.isSunk()&&e.p.isSunk())}}}}},e={};function n(A){var a=e[A];if(void 0!==a)return a.exports;var r=e[A]={id:A,exports:{}};return t[A].call(r.exports,r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var A in e)n.o(e,A)&&!n.o(t,A)&&Object.defineProperty(t,A,{enumerable:!0,get:e[A]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nc=void 0,n(834),n(183),n(23),n(823)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,